version: "3.9"

services:
  api: &api
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    image: project_base_api
    container_name: api
    volumes:
      - .:/app:z
      - ./staticfiles:/app/staticfiles:z 
    expose: 
      - "8000"
    env_file:
      - .envs/.env.local
    depends_on:
      - postgres
      - mailpit
      - redis
    command: /start
    networks:
      - project_base
      
  postgres:
    build:
      context: .
      dockerfile: ./docker/local/postgres/Dockerfile
    volumes:
      - project_base_postgres_data:/var/lib/postgresql/data
    env_file:
      - .envs/.env.local
    networks:
      - project_base

  mailpit:
    image: docker.io/axllent/mailpit:v1.15
    container_name: mailpit
    ports:
      - "8025:8025"
      - "1025:1025"
    volumes:
      - project_base_mailpit_data:/data
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATA_FILE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - project_base
  
  client: 
    build: 
      context: ./client
      dockerfile: docker/local/Dockerfile
    container_name: client
    image: project_base_client
    expose: 
      - "3000"
    volumes: 
      - ./client:/app
      - /app/node_modules
    networks:
      - project_base
  
  redis: 
    image: redis:7.0-alpine3.19
    command: redis-server --appendonly yes
    container_name: redis
    volumes: 
      - project_base_redis_data:/data
    networks: 
      - project_base

  celery-worker: 
    <<: *api
    image: project_base_celeryworker
    container_name: celery-worker
    command: /start-celeryworker

  celery-beat: 
    <<: *api
    image: project_base_celerybeat
    container_name: celery-beat
    command: /start-celerybeat

  flower: 
    <<: *api
    image: project_base_flower
    container_name: flower
    ports: 
      - "5555:5555"
    command: /start-flower

  nginx:
    build:  
      context: ./docker/local/nginx/
      dockerfile: Dockerfile
    restart: always
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./staticfiles:/app/staticfiles:z
      - logs_store:/var/log/nginx
    depends_on:
      - api
    networks: 
      -  project_base

networks:
  project_base:
    external: true

volumes:
  project_base_postgres_data: {}
  project_base_mailpit_data: {}
  logs_store: {}
  project_base_redis_data: {}
